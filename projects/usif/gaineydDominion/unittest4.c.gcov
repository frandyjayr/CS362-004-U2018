        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include <stdio.h>
        -:    3:#include <stdlib.h>
        -:    4:
        -:    5:// The following is a unit test for the supplyCount function within the dominion.c/dominon.h file
        -:    6:
        1:    7:void testSupplyCount() {
        1:    8:	struct gameState* g = malloc(sizeof(struct gameState));
        1:    9:	int success = 1;
        1:   10:	int card1 = 1,
        1:   11:	    card2 = 2,
        1:   12:            card3 = 3;
        1:   13:	g->supplyCount[card1] = -1;
        1:   14:	g->supplyCount[card2] = 0;
        1:   15:	g->supplyCount[card3] = 1;
        -:   16:
        1:   17:	printf("--------------- TESTING FUNCTION: supplyCount() ---------------\n");
        1:   18:	printf("Test 1: Test negative number supply\n");
        1:   19:	if (supplyCount(card1, g) == -1) {
        1:   20:		printf("supplyCount(): PASS when test contains state->supplyCount[card1] == -1\n");
        -:   21:	} else {
    #####:   22:		success = 0;
    #####:   23:		printf("supplyCount(): FAIL when test contains state->supplyCount[card1] == -1\n");
        -:   24:	}
        -:   25:	
        1:   26:	printf("Test 2: Test zero supply\n");
        1:   27:	if (supplyCount(card2, g) == 0) {
        1:   28:		printf("supplyCount(): PASS when test contains state->supplyCount[card2] == 0\n");
        -:   29:	} else {
    #####:   30:		success = 0;
    #####:   31:		printf("supplyCount(): FAIL when test contains state->supplyCount[card2] == 0\n");
        -:   32:	}
        -:   33:	
        1:   34:	printf("Test 3: Test positive number supply\n");
        1:   35:	if (supplyCount(card3, g) == 1) {
        1:   36:		printf("supplyCount(): PASS when test contains state->supplyCount[card3] == 1\n");
        -:   37:	} else {
    #####:   38:		success = 0;
    #####:   39:		printf("supplyCount(): FAIL when test contains state->supplyCount[card3] == 1\n");
        -:   40:	}	
        -:   41:
        1:   42:	if (success) {
        1:   43:		printf("\n--------------- TESTING SUCCESS ---------------\n");
        -:   44:	} else {
    #####:   45:		printf("\n--------------- TESTING FAILURE ---------------\n");
        -:   46:	}
        1:   47:	printf("\n--------------- TESTING COMPLETE for supplyCount() ---------------\n");
        -:   48:	
        1:   49:}
        -:   50:
        1:   51:int main(int argc, char* argv[]) {
        1:   52:	testSupplyCount();
        1:   53:	return 0;
        -:   54:}
